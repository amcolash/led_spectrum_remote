{"version":3,"sources":["Components/Holdable.js","Util/hsv.js","Components/Bars.js","Components/ColorGrid.js","Components/Spinner.js","Components/Text.js","App.js","serviceWorker.js","index.js"],"names":["Holdable","props","state","clickedAt","intervalId","handleClick","bind","handleFinish","e","persist","preventDefault","stopPropagation","this","setState","Date","setInterval","timeDelta","timeout","clearInterval","onClickComplete","onHoldComplete","classNames","className","onMouseDown","onTouchStart","onMouseUp","onTouchCancel","onTouchEnd","style","children","Component","rgbFromHsv","h","s","v","rgb","f","Math","floor","pv","qv","tv","Bars","heights","i","push","random","bars","width","height","margin","backgroundColor","barHues","barSaturation","outline","selected","undefined","cursor","key","onClick","display","alignItems","justifyContent","ColorGrid","saturation","syncSaturation","prevProps","prevState","dimensions","size","hue","disabled","sizeSquared","items","color","borderRadius","transition","pointerEvents","filter","Number","opacity","flexWrap","padding","textShadow","flexDirection","paddingTop","paddingRight","type","min","max","value","target","onChange","paddingLeft","id","checked","htmlFor","Spinner","visible","Text","d","time","toLocaleTimeString","date","toLocaleDateString","intervalID","textHue","textSaturation","fontSize","serverUrl","colorUrl","brightnessUrl","brightnessLevels","auto","off","App","presets","localStorage","getItem","JSON","parse","loading","setting","error","preset","tmpHue","brightness","getServerColors","axios","get","then","response","matched","Object","keys","forEach","name","p","stringify","unshift","apply","splice","length","deepEqual","data","res","parseInt","catch","err","console","post","prompt","setItem","setServerColors","selectedText","alignContent","message","border","marginBottom","flexGrow","position","paddingBottom","updateColor","marginTop","loadColorPreset","sort","a","b","localeCompare","map","saveColorPreset","window","confirm","setBrightness","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"ucAKqBA,E,YACnB,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KAEDC,MAAQ,CACXC,UAAW,MAGb,EAAKC,WAAa,KAElB,EAAKC,YAAc,EAAKA,YAAYC,KAAjB,gBACnB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBAVH,E,yEAaPE,GAAI,IAAD,OACbA,EAAEC,UACFD,EAAEE,iBACFF,EAAEG,kBAEFC,KAAKC,SACH,CACEV,UAAW,IAAIW,OAEjB,WACE,EAAKV,WAAaW,aAAY,WAC5B,IAAMC,EAAY,IAAIF,KAAS,EAAKZ,MAAMC,UACpCc,EAAU,EAAKhB,MAAMgB,SAAW,IAElC,EAAKf,MAAMC,WAAaa,GAAaC,GACvC,EAAKV,aAAaC,KAEnB,U,mCAKIA,IACXA,EAAEC,UACFD,EAAEE,iBACFF,EAAEG,kBAEGC,KAAKV,MAAMC,aAIZS,KAAKR,YACPc,cAAcN,KAAKR,YAGH,IAAIU,KAASF,KAAKV,MAAMC,WAC1BS,KAAKX,MAAMgB,SAAW,KAGhCL,KAAKX,MAAMkB,iBACbP,KAAKX,MAAMkB,gBAAgBX,GAGzBI,KAAKX,MAAMmB,gBACbR,KAAKX,MAAMmB,eAAeZ,GAI9BI,KAAKC,SAAS,CACZV,UAAW,U,+BAKb,IAAMkB,EACJ,YAAcT,KAAKX,MAAMqB,UAAX,WAA2BV,KAAKX,MAAMqB,WAAc,KAAOV,KAAKV,MAAMC,UAAY,mBAAqB,IAEvH,OACE,yBACEmB,UAAWD,EACXE,YAAaX,KAAKP,YAClBmB,aAAcZ,KAAKP,YACnBoB,UAAWb,KAAKL,aAChBmB,cAAed,KAAKL,aACpBoB,WAAYf,KAAKL,aACjBqB,MAAOhB,KAAKX,MAAM2B,OAAS,IAE1BhB,KAAKX,MAAM4B,c,GAjFkBC,a,MCJ/B,SAASC,EAAWC,EAAGC,EAAGC,GAG/B,IASIC,EARAC,GAFJJ,EAAIK,KAAKC,MAAW,IAAJN,EAAW,MAEd,GAAM,EAIfO,EAAML,GAFC,IAAMD,GAEK,IAClBO,EAAMN,GAAK,IAAOD,EAAIG,EAAK,KAAQ,IACnCK,EAAMP,GAAK,IAAOD,GAHX,IAAMG,GAGiB,KAAQ,IAG1C,OAVQC,KAAKC,MAAMN,EAAI,KAWrB,KAAK,EACHG,EAAM,CAACD,EAAGO,EAAIF,GACd,MACF,KAAK,EACHJ,EAAM,CAACK,EAAIN,EAAGK,GACd,MACF,KAAK,EACHJ,EAAM,CAACI,EAAIL,EAAGO,GACd,MACF,KAAK,EACHN,EAAM,CAACI,EAAIC,EAAIN,GACf,MACF,KAAK,EACHC,EAAM,CAACM,EAAIF,EAAIL,GACf,MACF,KAAK,EACL,QACEC,EAAM,CAACD,EAAGK,EAAIC,GAIlB,MAAM,OAAN,OAAcL,EAAI,GAAlB,aAAyBA,EAAI,GAA7B,aAAoCA,EAAI,IC/BnC,IAAMO,EAAb,YACE,WAAYzC,GAAQ,IAAD,sBACjB,4CAAMA,IAGN,IADA,IAAM0C,EAAU,GACPC,EAAI,EAAGA,EAAI,GAAIA,IACtBD,EAAQE,KAAqB,GAAhBR,KAAKS,SAAgB,IALnB,OAOjB,EAAK5C,MAAQ,CAAEyC,WAPE,EADrB,sEAaI,IAFQ,IAAD,OACDI,EAAO,GADN,WAEEH,GACPG,EAAKF,KACH,yBACEvB,UAAU,MACVM,MAAO,CACLoB,MAAO,GACPC,OAAQ,EAAK/C,MAAMyC,QAAQC,GAC3BM,OAAQ,EACRC,gBAAiBpB,EAAW,EAAK9B,MAAMmD,QAAQR,GAAI,EAAK3C,MAAMoD,cAAcT,GAAI,KAChFU,QAAS,EAAKrD,MAAMsD,WAAaX,EAAI,uBAAoBY,EACzDC,OAAQ,WAEVC,IAAKd,EACLe,QAAS,SAAAnD,GACP,EAAKP,MAAM0D,QAAQf,GACnBpC,EAAEG,uBAfDiC,EAAI,EAAGA,EAAI,GAAIA,IAAM,EAArBA,GAqBT,OAAO,yBAAKhB,MAAO,CAAEgC,QAAS,OAAQC,WAAY,WAAYC,eAAgB,WAAaf,OAlC/F,GAA0BjB,aCAbiC,G,MAAb,YACE,WAAY9D,GAAQ,IAAD,8BACjB,4CAAMA,KACDC,MAAQ,CAAE8D,WAAY,IAAKC,gBAAgB,GAF/B,EADrB,gFAMqBC,EAAWC,IAGzBvD,KAAKX,MAAM+D,aAAeE,EAAUF,YAAcpD,KAAKV,MAAM+D,iBAC5DE,EAAUF,gBAAkBrD,KAAKV,MAAM+D,iBAEzCrD,KAAKC,SAAS,CAAEmD,WAAYpD,KAAKX,MAAM+D,eAZ7C,+BAuBI,IAPQ,IAAD,SAC6CpD,KAAKX,MAAjDmE,EADD,EACCA,WAAYC,EADb,EACaA,KAAMnB,EADnB,EACmBA,OAAQoB,EAD3B,EAC2BA,IAAKC,EADhC,EACgCA,SACjCC,EAAcJ,EAAaA,EAC3BpB,GAASqB,EAAgB,EAATnB,GAAckB,EAE9BK,EAAQ,GALP,WAOE7B,GACP,IAAMZ,EAAIK,KAAKC,MAAOM,EAAI4B,EAAe,KACnCE,EAAQ3C,EAAWC,EAAG,EAAK9B,MAAM8D,WAAY,KAEnDS,EAAM5B,KACJ,yBACEvB,UAAU,WACVM,MAAO,CACLoB,MAAOqB,EACPpB,OAAQoB,EACRlB,gBAAiBuB,EACjBxB,SACAyB,aAAcN,EAAO,GACrBT,QAAS,OACTE,eAAgB,SAChBD,WAAY,SACZe,WAAY,WACZtB,QAASgB,IAAQtC,EAAI,kBAAoB,wBACzC6C,cAAeN,EAAW,YAASf,EACnCsB,OAAQP,EAAW,gCAA6Bf,EAChDC,OAAQc,OAAWf,EAAY,WAEjCE,IAAKd,EACLe,QAAS,SAAAnD,GACP,EAAKP,MAAM0D,QAAQ3B,EAAG+C,OAAO,EAAK7E,MAAM8D,aACxCxD,EAAEG,oBAGJ,yBAAKiB,MAAO,CAAEoD,QAAS,EAAGJ,WAAY,aAAe5C,MA5BlDY,EAAI,EAAGA,EAAI4B,EAAa5B,IAAM,EAA9BA,GAiCT,OACE,yBAAKhB,MAAO,CAAEgC,QAAS,OAAQqB,SAAU,OAAQnB,eAAgB,SAAUd,MAAOA,EAAiB,EAATE,IACxF,yBACEtB,MAAO,CACLgD,WAAY,WACZzB,gBAAiBoB,EAAW,UAAY,QACxCX,QAAS,OACTqB,SAAU,OACVjC,QACAkC,QAAShC,EACTiC,WAAY,kBAGbV,GAGH,yBAAK7C,MAAO,CAAEgC,QAAS,OAAQwB,cAAe,SAAUvB,WAAY,SAAUwB,WAAY,KACxF,yBAAKzD,MAAO,CAAEgC,QAAS,OAAQC,WAAY,WACzC,2BAAOjC,MAAO,CAAE0D,aAAc,IAA9B,cACA,2BACEC,KAAK,QACLC,IAAI,IACJC,IAAI,MACJC,MAAO9E,KAAKV,MAAM8D,WAClBL,QAAS,SAAAnD,GACP,EAAKK,SAAS,CAAEmD,WAAYxD,EAAEmF,OAAOD,QACrClF,EAAEG,mBAEJiF,SAAU,SAAApF,GACR,EAAKK,SAAS,CAAEmD,WAAYxD,EAAEmF,OAAOD,QACrClF,EAAEG,qBAGN,0BAAMiB,MAAO,CAAEiE,YAAa,IAAMjF,KAAKV,MAAM8D,aAG/C,yBAAKpC,MAAO,CAAEgC,QAAS,SACrB,2BACEkC,GAAG,kBACHP,KAAK,WACLQ,QAASnF,KAAKV,MAAM+D,eACpBN,QAAS,SAAAnD,GAAC,OAAIA,EAAEG,mBAChBiF,SAAU,SAAApF,GACR,EAAKK,SAAS,CAAEoD,gBAAiB,EAAK/D,MAAM+D,iBAC5CzD,EAAEG,qBAGN,2BAAOqF,QAAQ,kBAAkBrC,QAAS,SAAAnD,GAAC,OAAIA,EAAEG,oBAAjD,0BAvGZ,GAA+BmB,cCClBmE,G,MAAb,iLAEI,IAAI3E,EAAY,eAGhB,OAFKV,KAAKX,MAAMiG,UAAS5E,GAAa,WAGpC,yBAAKA,UAAWA,EAAWM,MAAO,CAAEoB,MAAOpC,KAAKX,MAAM+C,OAAS,GAAIC,OAAQrC,KAAKX,MAAMgD,QAAU,KAC9F,yBAAK3B,UAAU,qBACf,yBAAKA,UAAU,qBACf,yBAAKA,UAAU,qBACf,yBAAKA,UAAU,qBACf,yBAAKA,UAAU,qBACf,yBAAKA,UAAU,qBACf,yBAAKA,UAAU,qBACf,yBAAKA,UAAU,qBACf,yBAAKA,UAAU,0BAfvB,GAA6BQ,cCDhBqE,G,MAAb,YACE,WAAYlG,GAAQ,IAAD,sBACjB,4CAAMA,IAEN,IAAMmG,EAAI,IAAItF,KAHG,OAIjB,EAAKZ,MAAQ,CAAEmG,KAAMD,EAAEE,qBAAsBC,KAAMH,EAAEI,sBAJpC,EADrB,iFAQuB,IAAD,OAClB5F,KAAK6F,WAAa1F,aAAY,WAC5B,IAAMqF,EAAI,IAAItF,KACd,EAAKD,SAAS,CAAEwF,KAAMD,EAAEE,qBAAsBC,KAAMH,EAAEI,yBACrD,OAZP,6CAgBItF,cAAcN,KAAK6F,cAhBvB,+BAmBY,IAAD,OACP,OACE,yBACEnF,UAAU,OACVM,MAAO,CACL8C,MAAO3C,EAAWnB,KAAKX,MAAMyG,QAAS9F,KAAKX,MAAM0G,eAAgB,KACjEC,SAAU,GACV5D,MAAO,OACPM,QAAS1C,KAAKX,MAAMsD,SAAW,uBAAoBC,EACnDC,OAAQ,WAEVE,QAAS,SAAAnD,GACP,EAAKP,MAAM0D,QAAQnD,GACnBA,EAAEG,oBAGJ,yBAAKiB,MAAO,CAAEgC,QAAS,OAAQC,WAAY,aAAcC,eAAgB,gBAAiBd,MAAO,SAC/F,yBAAKpB,MAAO,CAAEgF,SAAU,KAAOhG,KAAKV,MAAMmG,MAC1C,yBAAKzE,MAAO,CAAEyD,WAAY,IAA1B,YAEF,6BAAMzE,KAAKV,MAAMqG,WAvCzB,GAA0BzE,cCMpB+E,EAAY,0CACZC,EAAQ,UAAMD,EAAN,UACRE,EAAa,UAAMF,EAAN,eAEbG,EAAmB,CACvBC,MAAO,EACPC,IAAK,EACL,MAAO,GACP,MAAO,IACP,MAAO,IACP,OAAQ,KAGGC,EAAb,YACE,WAAYlH,GAAQ,IAAD,sBACjB,4CAAMA,IAEN,IAAImH,EAAUC,aAAaC,QAAQ,WAHlB,OAIJF,EAATA,EAAmBG,KAAKC,MAAMJ,GACnB,GAEf,EAAKlH,MAAQ,CACXuH,SAAS,EACTC,SAAS,EACTC,MAAO,KACPvE,QAAS,GACTC,cAAe,GACfqD,QAAS,EACTC,eAAgB,EAChBpD,UAAW,EACX6D,UACAQ,OAAQ,GACRC,OAAQ,KACRC,YAAa,GAnBE,EADrB,iFAyBIlH,KAAKmH,oBAzBT,sCA4BkBH,GAAS,IAAD,OACtBI,IACGC,IAAInB,GACJoB,MAAK,SAAAC,GAIJ,IAAIC,EACCR,GACHS,OAAOC,KAAK,EAAKpI,MAAMkH,SAASmB,SAAQ,SAAAC,GACtC,IAAK,IAAI5F,EAAI,EAAGA,EAAI,GAAIA,IAAK,CAE3B,IAAM6F,EAAIlB,KAAKC,MAAMD,KAAKmB,UAAU,EAAKxI,MAAMkH,QAAQoB,KAGvDC,EAAErF,QAAQuF,QAAQC,MAAMH,EAAErF,QAASqF,EAAErF,QAAQyF,OAAOjG,EAAG6F,EAAErF,QAAQ0F,SACjEL,EAAEpF,cAAcsF,QAAQC,MAAMH,EAAEpF,cAAeoF,EAAEpF,cAAcwF,OAAOjG,EAAG6F,EAAEpF,cAAcyF,SAGrFC,IAAUZ,EAASa,KAAMP,KAAIL,EAAUI,OAKjD,EAAK3H,SAAL,aAAgBgH,OAAQ,KAAMD,OAAQA,GAAUQ,GAAW,IAAOD,EAASa,OAAQ,WACjFhB,IACGC,IAAIlB,GACJmB,MAAK,SAAAe,GACJ,EAAKpI,SAAS,CAAE4G,SAAS,EAAOK,WAAY/C,OAAOmE,SAASD,EAAID,WAEjEG,OAAM,SAAAC,GACLC,QAAQ1B,MAAMyB,GACd,EAAKvI,SAAS,CAAE8G,MAAOyB,aAI9BD,OAAM,SAAAC,GACLC,QAAQ1B,MAAMyB,GACd,EAAKvI,SAAS,CAAE8G,MAAOyB,SAlE/B,sCAsEkBJ,EAAMpB,GAAS,IAAD,OAC5BhH,KAAKC,SAAS,CAAE6G,SAAS,EAAME,OAAQA,GAAU,KAAM,WACrDI,IACGsB,KAAKxC,EAAW,SAAWS,KAAKmB,UAAUM,IAC1Cd,MAAK,SAAAC,GAAQ,OAAI,EAAKtH,SAAL,aAAgB4G,SAAS,EAAOC,SAAS,EAAOG,OAAQ,KAAMD,OAAQA,GAAU,IAAOO,EAASa,UACjHG,OAAM,SAAAC,GACLC,QAAQ1B,MAAMyB,WA5ExB,wCAkFI,IAAIhC,EAAUC,aAAaC,QAAQ,WACtBF,EAATA,EAAmBG,KAAKC,MAAMJ,GACnB,GAEf,IAAMoB,EAAOe,OAAO,eAAgB,WACpC,GAAIf,EAAM,CAAC,IAAD,EACoD5H,KAAKV,MAAzDkD,EADA,EACAA,QAASC,EADT,EACSA,cAAeqD,EADxB,EACwBA,QAASC,EADjC,EACiCA,eACzCS,EAAQoB,GAAQ,CAAEpF,UAASC,gBAAeqD,UAASC,kBACnDU,aAAamC,QAAQ,UAAWjC,KAAKmB,UAAUtB,IAE/CxG,KAAKC,SAAS,CAAEuG,UAASQ,OAAQY,OA5FvC,sCAgGkBA,GACd,IAAIpB,EAAUC,aAAaC,QAAQ,WACnC,GAAIF,IACFA,EAAUG,KAAKC,MAAMJ,IACToB,GAAO,CAAC,IAAD,EAC2CpB,EAAQoB,GAA5DpF,EADS,EACTA,QAASC,EADA,EACAA,cAAeqD,EADf,EACeA,QAASC,EADxB,EACwBA,eAEzC/F,KAAK6I,gBAAgB,CAAErG,UAASC,gBAAeqD,UAASC,kBAAkB6B,MAvGlF,kCA4GcxG,EAAGC,GAAI,IAAD,OAChBrB,KAAKC,SAAS,CAAEgH,OAAQ7F,IAAK,WAAO,IAAD,EACmC,EAAK9B,MAAnEkD,EAD2B,EAC3BA,QAASC,EADkB,EAClBA,cAAeqD,EADG,EACHA,QAASC,EADN,EACMA,eAAgBpD,EADtB,EACsBA,UAE1B,IAAzB,EAAKrD,MAAMqD,YACmB,IAAzB,EAAKrD,MAAMqD,UAClBmD,EAAU1E,EACV2E,EAAiB1E,IAEjBmB,EAAO,YAAO,EAAKlD,MAAMkD,SACzBC,EAAa,YAAO,EAAKnD,MAAMmD,eAC/BD,EAAQG,GAAYvB,EACpBqB,EAAcE,GAAYtB,GAG5B,EAAKwH,gBAAgB,CAAErG,UAASC,gBAAeqD,UAASC,yBA3H9D,oCA+HgBmB,GAAa,IAAD,OACxBlH,KAAKC,SAAS,CAAE6G,SAAS,IAAQ,WAC/BM,IACGsB,KAAKvC,EAAgB,eAAiBe,GACtCI,MAAK,SAAAe,GACJ,EAAKpI,SAAS,CAAEiH,WAAY/C,OAAOmE,SAASpB,GAAaJ,SAAS,OAEnEyB,OAAM,SAAAC,GACLC,QAAQ1B,MAAMyB,GACd,EAAKvI,SAAS,CAAE6G,SAAS,YAxInC,+BA6IY,IAAD,SAcH9G,KAAKV,MAZPkD,EAFK,EAELA,QACAC,EAHK,EAGLA,cACAsE,EAJK,EAILA,MACAF,EALK,EAKLA,QACAlE,EANK,EAMLA,SACAmE,EAPK,EAOLA,QACAG,EARK,EAQLA,OACAnB,EATK,EASLA,QACAC,EAVK,EAULA,eACAiB,EAXK,EAWLA,OACAR,EAZK,EAYLA,QACAU,EAbK,EAaLA,WAGE4B,EAAe,aACfpF,GAAO,EACPN,EAAa,IAajB,OAZkB,IAAdT,EAAiBmG,GAAgB,WACd,IAAdnG,GACPmG,GAAgB,OAChBpF,EAAMoC,EACN1C,EAAa2C,IAEb+C,GAAgB,OAASnG,EACzBe,EAAMlB,EAAQG,GACdS,EAAaX,EAAcE,IAE7Be,EAAiB,OAAXuD,IAAiC,IAAdtE,EAAkBsE,EAASvD,EAGlD,yBACEhD,UAAU,MACVM,MAAO,CACLgC,QAAS,OACTwB,cAAe,SACfH,SAAU,OACV0E,aAAc,SACd7F,eAAgB,SAChBD,WAAY,SACZZ,OAAQ,SAEVU,QAAS,kBAAM,EAAK9C,SAAS,CAAE0C,UAAW,EAAGsE,OAAQ,SACpDF,EACC,4BAAKA,EAAMiC,SACTnC,EACF,kBAAC,WAAD,KACE,0CACA,kBAAC,EAAD,CAASvB,SAAS,KAGpB,kBAAC,WAAD,KACE,yBACE5E,UAAU,UACVM,MAAO,CACLoB,MAAO,OACPC,OAAQ,SACR4G,OAAQ,iBACRjG,QAAS,OACTwB,cAAe,SACfF,QAAS,EACTP,aAAc,EACdmF,aAAc,KAEhB,kBAAC,EAAD,CACEpD,QAASA,EACTC,eAAgBA,EAChBpD,UAAmC,IAAzB3C,KAAKV,MAAMqD,SACrBI,QAAS,kBAAM,EAAK9C,SAAS,CAAE0C,UAAW,EAAGsE,OAAQ,UAEvD,yBACEjG,MAAO,CACLgC,QAAS,OACTwB,cAAe,SACfvB,WAAY,SACZC,eAAgB,SAChBiG,SAAU,EACVC,SAAU,WACVC,cAAe,KAEjB,kBAAC,EAAD,CAAS/D,QAASwB,IAClB,yBAAK9F,MAAO,CAAEoD,QAAU0C,IAAyB,IAAdnE,EAAsB,EAAJ,EAAOqB,WAAY,YAAaoF,SAAU,aAC5FN,IAGL,kBAAC,EAAD,CACEtG,QAASA,EACTC,cAAeA,EACfE,SAAUA,EACVI,QAAS,SAAAf,GAAC,OAAI,EAAK/B,SAAS,CAAE0C,SAAUX,EAAGiF,OAAQ,WAIvD,kBAAC,EAAD,CACEzD,WAAY,EACZC,KAAM,GACNnB,OAAQ,EACRoB,IAAKA,EACLN,WAAYA,EACZO,UAAwB,IAAdhB,EACVI,QAAS,SAAC3B,EAAGC,GAAJ,OAAU,EAAKiI,YAAYlI,EAAGC,MAGzC,yBAAKL,MAAO,CAAEgC,QAAS,OAAQwB,cAAe,SAAUvB,WAAY,WAAYsG,UAAW,KACzF,6BACE,0CACA,4BAAQvE,SAAU,SAAApF,GAAC,OAAI,EAAK4J,gBAAgB5J,EAAEmF,OAAOD,QAAQA,MAAOkC,GACjE,CAAC,IAAD,mBAAQS,OAAOC,KAAKlB,KAClBiD,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,MAC/BE,KAAI,SAAAhC,GAAC,OACJ,4BAAQ/C,MAAO+C,EAAG/E,IAAK+E,GACpBA,OAIT,4BAAQ9E,QAAS,kBAAM,EAAK+G,iBAAgB,KAA5C,QACA,kBAAC,EAAD,CACEvJ,gBAAiB,WACf,EAAKN,SAAS,CAAE6G,SAAS,IAAQ,kBAC/BM,IACGsB,KAAKxC,EAAW,UAChBoB,MAAK,SAAAC,GAAQ,OAAI,EAAKtH,SAAL,aAAgB4G,SAAS,EAAOC,SAAS,EAAOG,OAAQ,KAAMD,OAAQ,IAAOO,EAASa,cAG9G5H,eAAgB,WACd,GAAe,KAAXwG,GACQ+C,OAAOC,QAAP,0CAAkDhD,EAAlD,MACH,CACL,IAAIR,EAAUC,aAAaC,QAAQ,kBACtBF,EAATA,EAAmBG,KAAKC,MAAMJ,GACnB,IAEAQ,GACfP,aAAamC,QAAQ,UAAWjC,KAAKmB,UAAUtB,IAE/C,EAAKvG,SAAS,CAAEuG,UAASQ,OAAQ,OAIvChG,MAAO,CAAEgC,QAAS,iBAClB,2CAGJ,6BACE,6CACA,4BAAQgC,SAAU,SAAApF,GAAC,OAAI,EAAKqK,cAAcrK,EAAEmF,OAAOD,QAAQA,MAAOoC,GAC/D,YAAIO,OAAOC,KAAKtB,IAAmByD,KAAI,SAAAF,GAAC,OACvC,4BAAQ7E,MAAOsB,EAAiBuD,GAAI7G,IAAK6G,GACtCA,OAIP,4BACE5G,QAAS,WACP,EAAK9C,SAAS,CAAE6G,SAAS,IAAQ,kBAC/BM,IACGsB,KAAKxC,EAAW,aAChBoB,MAAK,SAAAC,GAAQ,OAAI,EAAKtH,SAAL,aAAgB4G,SAAS,EAAOC,SAAS,EAAOG,OAAQ,MAASM,EAASa,eAGjG,MAEH,4BACErF,QAAS,WACP,EAAK9C,SAAS,CAAE6G,SAAS,IAAQ,kBAC/BM,IACGsB,KAAKxC,EAAW,YAChBoB,MAAK,SAAAC,GAAQ,OAAI,EAAKtH,SAAL,aAAgB4G,SAAS,EAAOC,SAAS,EAAOG,OAAQ,MAASM,EAASa,eAGjG,cAxTnB,GAAyBlH,aCZLgJ,QACW,cAA7BH,OAAOI,SAASC,UAEe,UAA7BL,OAAOI,SAASC,UAEhBL,OAAOI,SAASC,SAASC,MAAM,2DCXnCC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SDgH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMtD,MAAK,SAAAuD,GACjCA,EAAaC,kB","file":"static/js/main.1f3fd19a.chunk.js","sourcesContent":["// Code from https://github.com/martynasjocius/react-holdable\n// npm package didn't seem to properly work :(\n\nimport React, { Component } from 'react';\n\nexport default class Holdable extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      clickedAt: null\n    };\n\n    this.intervalId = null;\n\n    this.handleClick = this.handleClick.bind(this);\n    this.handleFinish = this.handleFinish.bind(this);\n  }\n\n  handleClick(e) {\n    e.persist();\n    e.preventDefault();\n    e.stopPropagation();\n\n    this.setState(\n      {\n        clickedAt: new Date()\n      },\n      () => {\n        this.intervalId = setInterval(() => {\n          const timeDelta = new Date() - this.state.clickedAt;\n          const timeout = this.props.timeout || 1000;\n\n          if (this.state.clickedAt && timeDelta >= timeout) {\n            this.handleFinish(e);\n          }\n        }, 100);\n      }\n    );\n  }\n\n  handleFinish(e) {\n    e.persist();\n    e.preventDefault();\n    e.stopPropagation();\n\n    if (!this.state.clickedAt) {\n      return;\n    }\n\n    if (this.intervalId) {\n      clearInterval(this.intervalId);\n    }\n\n    const timeDelta = new Date() - this.state.clickedAt;\n    const timeout = this.props.timeout || 1000;\n\n    if (timeDelta < timeout) {\n      if (this.props.onClickComplete) {\n        this.props.onClickComplete(e);\n      }\n    } else {\n      if (this.props.onHoldComplete) {\n        this.props.onHoldComplete(e);\n      }\n    }\n\n    this.setState({\n      clickedAt: null\n    });\n  }\n\n  render() {\n    const classNames =\n      'holdable' + (this.props.className ? ` ${this.props.className}` : '') + (this.state.clickedAt ? ' holdable-active' : '');\n\n    return (\n      <div\n        className={classNames}\n        onMouseDown={this.handleClick}\n        onTouchStart={this.handleClick}\n        onMouseUp={this.handleFinish}\n        onTouchCancel={this.handleFinish}\n        onTouchEnd={this.handleFinish}\n        style={this.props.style || {}}\n      >\n        {this.props.children}\n      </div>\n    );\n  }\n}\n","// ported from arduino code so that it is comsistent across platforms\nexport function rgbFromHsv(h, s, v) {\n  // this is the algorithm to convert from RGB to HSV\n  h = Math.floor((h * 192) / 256); // 0..191\n  let i = Math.floor(h / 32); // We want a value of 0 thru 5\n  let f = (h % 32) * 8; // 'fractional' part of 'i' 0..248 in jumps\n\n  let sInv = 255 - s; // 0 -> 0xff, 0xff -> 0\n  let fInv = 255 - f; // 0 -> 0xff, 0xff -> 0\n  let pv = (v * sInv) / 256; // pv will be in range 0 - 255\n  let qv = (v * (256 - (s * f) / 256)) / 256;\n  let tv = (v * (256 - (s * fInv) / 256)) / 256;\n\n  let rgb;\n  switch (i) {\n    case 0:\n      rgb = [v, tv, pv];\n      break;\n    case 1:\n      rgb = [qv, v, pv];\n      break;\n    case 2:\n      rgb = [pv, v, tv];\n      break;\n    case 3:\n      rgb = [pv, qv, v];\n      break;\n    case 4:\n      rgb = [tv, pv, v];\n      break;\n    case 5:\n    default:\n      rgb = [v, pv, qv];\n      break;\n  }\n\n  return `rgb(${rgb[0]}, ${rgb[1]}, ${rgb[2]}`;\n}\n","import React from 'react';\nimport { Component } from 'react';\nimport './Bars.css';\nimport { rgbFromHsv } from '../Util/hsv';\n\nexport class Bars extends Component {\n  constructor(props) {\n    super(props);\n\n    const heights = [];\n    for (let i = 0; i < 16; i++) {\n      heights.push(Math.random() * 60 + 20);\n    }\n    this.state = { heights };\n  }\n\n  render() {\n    const bars = [];\n    for (let i = 0; i < 16; i++) {\n      bars.push(\n        <div\n          className=\"bar\"\n          style={{\n            width: 18,\n            height: this.state.heights[i],\n            margin: 2,\n            backgroundColor: rgbFromHsv(this.props.barHues[i], this.props.barSaturation[i], 255),\n            outline: this.props.selected === i ? '1px solid white' : undefined,\n            cursor: 'pointer'\n          }}\n          key={i}\n          onClick={e => {\n            this.props.onClick(i);\n            e.stopPropagation();\n          }}\n        ></div>\n      );\n    }\n\n    return <div style={{ display: 'flex', alignItems: 'flex-end', justifyContent: 'center' }}>{bars}</div>;\n  }\n}\n","import React from 'react';\nimport { Component } from 'react';\nimport { rgbFromHsv } from '../Util/hsv';\nimport './ColorGrid.css';\n\nexport class ColorGrid extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { saturation: 255, syncSaturation: true };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    // A bit messy, but the saturation state should be updated when in the \"synchronized mode\" and when it gets turned on\n    if (\n      (this.props.saturation !== prevProps.saturation && this.state.syncSaturation) ||\n      (!prevState.syncSaturation && this.state.syncSaturation)\n    ) {\n      this.setState({ saturation: this.props.saturation });\n    }\n  }\n\n  render() {\n    const { dimensions, size, margin, hue, disabled } = this.props;\n    const sizeSquared = dimensions * dimensions;\n    const width = (size + margin * 2) * dimensions;\n\n    const items = [];\n\n    for (let i = 0; i < sizeSquared; i++) {\n      const h = Math.floor((i / sizeSquared) * 255);\n      const color = rgbFromHsv(h, this.state.saturation, 255);\n\n      items.push(\n        <div\n          className=\"gridItem\"\n          style={{\n            width: size,\n            height: size,\n            backgroundColor: color,\n            margin,\n            borderRadius: size / 12,\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            transition: 'all 0.2s',\n            outline: hue === h ? '1px solid white' : '1px solid transparent',\n            pointerEvents: disabled ? 'none' : undefined,\n            filter: disabled ? 'grayscale(90%) blur(1px)' : undefined,\n            cursor: disabled ? undefined : 'pointer'\n          }}\n          key={i}\n          onClick={e => {\n            this.props.onClick(h, Number(this.state.saturation));\n            e.stopPropagation();\n          }}\n        >\n          <div style={{ opacity: 0, transition: 'all 0.2s' }}>{h}</div>\n        </div>\n      );\n    }\n\n    return (\n      <div style={{ display: 'flex', flexWrap: 'wrap', justifyContent: 'center', width: width + margin * 2 }}>\n        <div\n          style={{\n            transition: 'all 0.2s',\n            backgroundColor: disabled ? '#2a2a2a' : 'black',\n            display: 'flex',\n            flexWrap: 'wrap',\n            width,\n            padding: margin,\n            textShadow: '1px 1px black'\n          }}\n        >\n          {items}\n        </div>\n\n        <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', paddingTop: 16 }}>\n          <div style={{ display: 'flex', alignItems: 'center' }}>\n            <label style={{ paddingRight: 4 }}>Saturation</label>\n            <input\n              type=\"range\"\n              min=\"0\"\n              max=\"255\"\n              value={this.state.saturation}\n              onClick={e => {\n                this.setState({ saturation: e.target.value });\n                e.stopPropagation();\n              }}\n              onChange={e => {\n                this.setState({ saturation: e.target.value });\n                e.stopPropagation();\n              }}\n            />\n            <span style={{ paddingLeft: 8 }}>{this.state.saturation}</span>\n          </div>\n\n          <div style={{ display: 'flex' }}>\n            <input\n              id=\"saturationCheck\"\n              type=\"checkbox\"\n              checked={this.state.syncSaturation}\n              onClick={e => e.stopPropagation()}\n              onChange={e => {\n                this.setState({ syncSaturation: !this.state.syncSaturation });\n                e.stopPropagation();\n              }}\n            />\n            <label htmlFor=\"saturationCheck\" onClick={e => e.stopPropagation()}>\n              Sync Saturation\n            </label>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { Component } from 'react';\nimport './Spinner.css';\n\n// Spinner from https://tobiasahlin.com/spinkit/\n\nexport class Spinner extends Component {\n  render() {\n    let className = 'sk-cube-grid';\n    if (!this.props.visible) className += ' hidden';\n\n    return (\n      <div className={className} style={{ width: this.props.width || 32, height: this.props.height || 32 }}>\n        <div className=\"sk-cube sk-cube1\"></div>\n        <div className=\"sk-cube sk-cube2\"></div>\n        <div className=\"sk-cube sk-cube3\"></div>\n        <div className=\"sk-cube sk-cube4\"></div>\n        <div className=\"sk-cube sk-cube5\"></div>\n        <div className=\"sk-cube sk-cube6\"></div>\n        <div className=\"sk-cube sk-cube7\"></div>\n        <div className=\"sk-cube sk-cube8\"></div>\n        <div className=\"sk-cube sk-cube9\"></div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { Component } from 'react';\nimport './Text.css';\nimport { rgbFromHsv } from '../Util/hsv';\n\nexport class Text extends Component {\n  constructor(props) {\n    super(props);\n\n    const d = new Date();\n    this.state = { time: d.toLocaleTimeString(), date: d.toLocaleDateString() };\n  }\n\n  componentDidMount() {\n    this.intervalID = setInterval(() => {\n      const d = new Date();\n      this.setState({ time: d.toLocaleTimeString(), date: d.toLocaleDateString() });\n    }, 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.intervalID);\n  }\n\n  render() {\n    return (\n      <div\n        className=\"text\"\n        style={{\n          color: rgbFromHsv(this.props.textHue, this.props.textSaturation, 255),\n          fontSize: 16,\n          width: '100%',\n          outline: this.props.selected ? '1px solid white' : undefined,\n          cursor: 'pointer'\n        }}\n        onClick={e => {\n          this.props.onClick(e);\n          e.stopPropagation();\n        }}\n      >\n        <div style={{ display: 'flex', alignItems: 'flex-begin', justifyContent: 'space-between', width: '100%' }}>\n          <div style={{ fontSize: 32 }}>{this.state.time}</div>\n          <div style={{ paddingTop: 4 }}>Weather</div>\n        </div>\n        <div>{this.state.date}</div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { Component, Fragment } from 'react';\nimport axios from 'axios';\nimport deepEqual from 'deep-equal';\nimport './App.css';\nimport Holdable from './Components/Holdable';\nimport { Bars } from './Components/Bars';\nimport { ColorGrid } from './Components/ColorGrid';\nimport { Spinner } from './Components/Spinner';\nimport { Text } from './Components/Text';\n\nconst serverUrl = 'https://home.amcolash.com:9000/spectrum';\nconst colorUrl = `${serverUrl}/color`;\nconst brightnessUrl = `${serverUrl}/brightness`;\n\nconst brightnessLevels = {\n  auto: -1,\n  off: 1,\n  '25%': 64,\n  '50%': 128,\n  '75%': 192,\n  '100%': 255,\n};\n\nexport class App extends Component {\n  constructor(props) {\n    super(props);\n\n    let presets = localStorage.getItem('presets');\n    if (presets) presets = JSON.parse(presets);\n    else presets = {};\n\n    this.state = {\n      loading: true,\n      setting: false,\n      error: null,\n      barHues: [],\n      barSaturation: [],\n      textHue: 0,\n      textSaturation: 0,\n      selected: -1,\n      presets,\n      preset: '',\n      tmpHue: null,\n      brightness: -1,\n    };\n  }\n\n  componentDidMount() {\n    this.getServerColors();\n  }\n\n  getServerColors(preset) {\n    axios\n      .get(colorUrl)\n      .then(response => {\n        // Check to see if there is a matching preset (that is possibly shifted around), and if so set the preset.\n        // This is mostly for initial load for a nicer ui experience.\n\n        let matched;\n        if (!preset) {\n          Object.keys(this.state.presets).forEach(name => {\n            for (let i = 0; i < 16; i++) {\n              // Make a copy of the preset to prevent changes to the state object\n              const p = JSON.parse(JSON.stringify(this.state.presets[name]));\n\n              // Rotate both arrays by i, based on: https://stackoverflow.com/questions/1985260\n              p.barHues.unshift.apply(p.barHues, p.barHues.splice(i, p.barHues.length));\n              p.barSaturation.unshift.apply(p.barSaturation, p.barSaturation.splice(i, p.barSaturation.length));\n\n              // Check if the server data matches a local preset, if so set it here\n              if (deepEqual(response.data, p)) matched = name;\n            }\n          });\n        }\n\n        this.setState({ tmpHue: null, preset: preset || matched || '', ...response.data }, () => {\n          axios\n            .get(brightnessUrl)\n            .then(res => {\n              this.setState({ loading: false, brightness: Number.parseInt(res.data) });\n            })\n            .catch(err => {\n              console.error(err);\n              this.setState({ error: err });\n            });\n        });\n      })\n      .catch(err => {\n        console.error(err);\n        this.setState({ error: err });\n      });\n  }\n\n  setServerColors(data, preset) {\n    this.setState({ setting: true, preset: preset || '' }, () => {\n      axios\n        .post(colorUrl + '?data=' + JSON.stringify(data))\n        .then(response => this.setState({ loading: false, setting: false, tmpHue: null, preset: preset || '', ...response.data }))\n        .catch(err => {\n          console.error(err);\n        });\n    });\n  }\n\n  saveColorPreset() {\n    let presets = localStorage.getItem('presets');\n    if (presets) presets = JSON.parse(presets);\n    else presets = {};\n\n    const name = prompt('Preset Name?', 'default');\n    if (name) {\n      const { barHues, barSaturation, textHue, textSaturation } = this.state;\n      presets[name] = { barHues, barSaturation, textHue, textSaturation };\n      localStorage.setItem('presets', JSON.stringify(presets));\n\n      this.setState({ presets, preset: name });\n    }\n  }\n\n  loadColorPreset(name) {\n    let presets = localStorage.getItem('presets');\n    if (presets) {\n      presets = JSON.parse(presets);\n      if (presets[name]) {\n        const { barHues, barSaturation, textHue, textSaturation } = presets[name];\n\n        this.setServerColors({ barHues, barSaturation, textHue, textSaturation }, name);\n      }\n    }\n  }\n\n  updateColor(h, s) {\n    this.setState({ tmpHue: h }, () => {\n      let { barHues, barSaturation, textHue, textSaturation, selected } = this.state;\n\n      if (this.state.selected === -1) return;\n      else if (this.state.selected === -2) {\n        textHue = h;\n        textSaturation = s;\n      } else {\n        barHues = [...this.state.barHues];\n        barSaturation = [...this.state.barSaturation];\n        barHues[selected] = h;\n        barSaturation[selected] = s;\n      }\n\n      this.setServerColors({ barHues, barSaturation, textHue, textSaturation });\n    });\n  }\n\n  setBrightness(brightness) {\n    this.setState({ setting: true }, () => {\n      axios\n        .post(brightnessUrl + '?brightness=' + brightness)\n        .then(res => {\n          this.setState({ brightness: Number.parseInt(brightness), setting: false });\n        })\n        .catch(err => {\n          console.error(err);\n          this.setState({ setting: false });\n        });\n    });\n  }\n\n  render() {\n    const {\n      barHues,\n      barSaturation,\n      error,\n      loading,\n      selected,\n      setting,\n      tmpHue,\n      textHue,\n      textSaturation,\n      preset,\n      presets,\n      brightness,\n    } = this.state;\n\n    let selectedText = 'Selected: ';\n    let hue = -1;\n    let saturation = 255;\n    if (selected === -1) selectedText += 'Nothing';\n    else if (selected === -2) {\n      selectedText += 'Text';\n      hue = textHue;\n      saturation = textSaturation;\n    } else {\n      selectedText += 'Bar ' + selected;\n      hue = barHues[selected];\n      saturation = barSaturation[selected];\n    }\n    hue = tmpHue !== null && selected !== -1 ? tmpHue : hue;\n\n    return (\n      <div\n        className=\"app\"\n        style={{\n          display: 'flex',\n          flexDirection: 'column',\n          flexWrap: 'wrap',\n          alignContent: 'center',\n          justifyContent: 'center',\n          alignItems: 'center',\n          height: '100vh',\n        }}\n        onClick={() => this.setState({ selected: -1, tmpHue: null })}>\n        {error ? (\n          <h1>{error.message}</h1>\n        ) : loading ? (\n          <Fragment>\n            <h1>Loading...</h1>\n            <Spinner visible={true} />\n          </Fragment>\n        ) : (\n          <Fragment>\n            <div\n              className=\"display\"\n              style={{\n                width: '22em',\n                height: '12.3em',\n                border: '1px solid gray',\n                display: 'flex',\n                flexDirection: 'column',\n                padding: 3,\n                borderRadius: 3,\n                marginBottom: 20,\n              }}>\n              <Text\n                textHue={textHue}\n                textSaturation={textSaturation}\n                selected={this.state.selected === -2}\n                onClick={() => this.setState({ selected: -2, tmpHue: null })}\n              />\n              <div\n                style={{\n                  display: 'flex',\n                  flexDirection: 'column',\n                  alignItems: 'center',\n                  justifyContent: 'center',\n                  flexGrow: 1,\n                  position: 'relative',\n                  paddingBottom: 10,\n                }}>\n                <Spinner visible={setting} />\n                <div style={{ opacity: !setting && selected !== -1 ? 1 : 0, transition: 'all 0.35s', position: 'absolute' }}>\n                  {selectedText}\n                </div>\n              </div>\n              <Bars\n                barHues={barHues}\n                barSaturation={barSaturation}\n                selected={selected}\n                onClick={i => this.setState({ selected: i, tmpHue: null })}\n              />\n            </div>\n\n            <ColorGrid\n              dimensions={7}\n              size={32}\n              margin={2}\n              hue={hue}\n              saturation={saturation}\n              disabled={selected === -1}\n              onClick={(h, s) => this.updateColor(h, s)}\n            />\n\n            <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'flex-end', marginTop: 20 }}>\n              <div>\n                <label>Presets</label>\n                <select onChange={e => this.loadColorPreset(e.target.value)} value={preset}>\n                  {['', ...Object.keys(presets)]\n                    .sort((a, b) => a.localeCompare(b))\n                    .map(p => (\n                      <option value={p} key={p}>\n                        {p}\n                      </option>\n                    ))}\n                </select>\n                <button onClick={() => this.saveColorPreset(true)}>Save</button>\n                <Holdable\n                  onClickComplete={() => {\n                    this.setState({ setting: true }, () =>\n                      axios\n                        .post(colorUrl + '?reset')\n                        .then(response => this.setState({ loading: false, setting: false, tmpHue: null, preset: '', ...response.data }))\n                    );\n                  }}\n                  onHoldComplete={() => {\n                    if (preset !== '') {\n                      const c = window.confirm(`Are you sure you want to delete ${preset}?`);\n                      if (c) {\n                        let presets = localStorage.getItem('presets');\n                        if (presets) presets = JSON.parse(presets);\n                        else presets = {};\n\n                        delete presets[preset];\n                        localStorage.setItem('presets', JSON.stringify(presets));\n\n                        this.setState({ presets, preset: '' });\n                      }\n                    }\n                  }}\n                  style={{ display: 'inline-block' }}>\n                  <button>Reset</button>\n                </Holdable>\n              </div>\n              <div>\n                <label>Brightness</label>\n                <select onChange={e => this.setBrightness(e.target.value)} value={brightness}>\n                  {[...Object.keys(brightnessLevels)].map(b => (\n                    <option value={brightnessLevels[b]} key={b}>\n                      {b}\n                    </option>\n                  ))}\n                </select>\n                <button\n                  onClick={() => {\n                    this.setState({ setting: true }, () =>\n                      axios\n                        .post(colorUrl + '?shift=-1')\n                        .then(response => this.setState({ loading: false, setting: false, tmpHue: null, ...response.data }))\n                    );\n                  }}>\n                  {'<<'}\n                </button>\n                <button\n                  onClick={() => {\n                    this.setState({ setting: true }, () =>\n                      axios\n                        .post(colorUrl + '?shift=1')\n                        .then(response => this.setState({ loading: false, setting: false, tmpHue: null, ...response.data }))\n                    );\n                  }}>\n                  {'>>'}\n                </button>\n              </div>\n            </div>\n          </Fragment>\n        )}\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log('This web app is being served cache-first by a service worker. To learn more, visit https://bit.ly/CRA-PWA');\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log('New content is available and will be used when all tabs for this page are closed. See https://bit.ly/CRA-PWA.');\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}